ðŸš€ LEVIBOT REALTIME - Yeni/GÃ¼ncellenmiÅŸ Dosyalar

=== BACKEND - Core Realtime ===
backend/src/infra/settings.py         (YENÄ°) - Merkezi konfigÃ¼rasyon
backend/src/infra/db.py                (YENÄ°) - TimescaleDB async client
backend/src/infra/redis_stream.py      (YENÄ°) - Redis XStream wrapper

backend/src/realtime/__init__.py       (YENÄ°) - Realtime modÃ¼l
backend/src/realtime/schemas.py        (YENÄ°) - Tick, Signal, Candle schemas
backend/src/realtime/dispatcher.py     (YENÄ°) - Event processing pipeline

backend/src/market/__init__.py         (YENÄ°) - Market data modÃ¼l
backend/src/market/normalize.py        (YENÄ°) - Symbol normalization
backend/src/market/ws_mexc.py          (YENÄ°) - MEXC WebSocket feed

backend/src/trading/__init__.py        (YENÄ°) - Trading modÃ¼l
backend/src/trading/slippage.py        (YENÄ°) - Slippage & fee calc
backend/src/trading/risk_guard.py      (YENÄ°) - Real-time risk guard
backend/src/trading/paper_engine_rt.py (YENÄ°) - Tick-driven paper engine

backend/src/ai/prompts.py              (YENÄ°) - AI prompt templates
backend/src/ai/openai_client.py        (GÃœNCEL) - Signal extraction

backend/src/app/main.py                (GÃœNCEL) - SSE endpoints (/stream/*)

=== BACKEND - Database ===
backend/sql/001_timescale_init.sql     (YENÄ°) - Hypertables
backend/sql/010_caggs.sql              (YENÄ°) - Continuous aggregates

=== BACKEND - Tests ===
backend/tests/test_realtime_smoke.py   (YENÄ°) - Smoke tests

=== FRONTEND ===
frontend/panel/src/pages/PaperTrading.tsx  (GÃœNCEL) - EventSource SSE

=== INFRASTRUCTURE ===
docker-compose.yml                     (GÃœNCEL) - TimescaleDB eklendi
backend/requirements.txt               (GÃœNCEL) - asyncpg, websockets
ops/nginx.conf                         (GÃœNCEL) - Stream endpoints

=== DOCUMENTATION ===
RUNBOOK_REALTIME.md                    (YENÄ°) - Production deployment guide
REALTIME_IMPLEMENTATION.md             (YENÄ°) - Complete feature list
env.realtime.example                   (YENÄ°) - Environment template
REALTIME_FILES.txt                     (YENÄ°) - Bu dosya

=== KOMUTLAR ===

# Docker ile baÅŸlat
docker-compose up -d

# Health check
curl http://localhost:8000/healthz
curl http://localhost:8000/stream/ticks  # SSE stream

# Panel
open http://localhost:3001

# Logs
docker-compose logs -f api

# Stop
docker-compose down

=== ARCHÄ°TECTURE ===

MEXC WS â†’ Redis Stream â†’ Dispatcher â†’ Paper Engine â†’ SSE â†’ Frontend
             â†“                            â†“
        TimescaleDB              Prometheus Metrics

=== KEY FEATURES ===

âœ… Real-time WebSocket tick feed (MEXC)
âœ… Redis XStream event pipeline
âœ… TimescaleDB time-series storage
âœ… Tick-driven paper trading (NEVER REST)
âœ… Fair slippage & fee simulation
âœ… Risk guard (daily loss, position limits)
âœ… OpenAI signal extraction
âœ… SSE streams for frontend
âœ… Continuous aggregates (1s, 1m, 5m candles)
âœ… Auto-reconnect & error recovery
âœ… Docker Compose full stack
âœ… Comprehensive documentation

