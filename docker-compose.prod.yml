version: "3.9"
services:
  redis:
    image: redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build:
      context: .
      dockerfile: ops/api.Dockerfile
    env_file:
      - .env.prod
    depends_on:
      redis:
        condition: service_healthy
    expose:
      - "8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 10

  panel:
    build:
      context: ./frontend/panel
      dockerfile: ../../ops/panel.Dockerfile
    env_file:
      - .env.prod
    depends_on:
      - api
    restart: "no"   # static build â†’ nginx serve eder
    volumes:
      - panelbuild:/mnt/panel

  nginx:
    image: nginx:1.27
    depends_on:
      api:
        condition: service_healthy
      panel:
        condition: service_completed_successfully
    ports:
      - "80:80"
    volumes:
      - panelbuild:/usr/share/nginx/html:ro
      - ./ops/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

volumes:
  redisdata:
  panelbuild:
