groups:
  - name: levibot_critical
    interval: 30s
    rules:
      # Inference Latency
      - alert: InferenceP95High
        expr: histogram_quantile(0.95, sum(rate(levi_inference_latency_seconds_bucket[5m])) by (le)) > 0.1
        for: 5m
        labels:
          severity: warning
          component: ai
        annotations:
          summary: "AI inference p95 latency > 100ms"
          description: "Inference latency p95 is {{ $value | humanizeDuration }} (threshold: 100ms)"

      # Market Data Queue Depth
      - alert: QueueDepthHigh
        expr: max_over_time(levi_md_queue_q95[5m]) > 32
        for: 5m
        labels:
          severity: critical
          component: engine
        annotations:
          summary: "Market data queue depth critical"
          description: "MD queue q95 is {{ $value }} (threshold: 32)"

      # Error Rate
      - alert: ErrorRateRising
        expr: rate(levi_errors_total[5m]) > 0.01
        for: 10m
        labels:
          severity: warning
          component: api
        annotations:
          summary: "Error rate > 1%"
          description: "Error rate is {{ $value | humanizePercentage }} over 10m"

      # Kill Switch
      - alert: KillSwitchActivated
        expr: max_over_time(levi_kill_switch[2m]) == 1
        for: 2m
        labels:
          severity: page
          component: ops
        annotations:
          summary: "ðŸš¨ KILL SWITCH ACTIVE"
          description: "Emergency kill switch has been activated. All trading stopped."

      # API Availability
      - alert: APIDown
        expr: up{job="levibot-api"} == 0
        for: 2m
        labels:
          severity: critical
          component: api
        annotations:
          summary: "API is down"
          description: "LeviBot API has been down for 2+ minutes"

  - name: levibot_performance
    interval: 1m
    rules:
      # High CPU
      - alert: HighCPUUsage
        expr: rate(process_cpu_seconds_total{job="levibot-api"}[5m]) > 0.8
        for: 10m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value | humanizePercentage }} over 10m"

      # High Memory
      - alert: HighMemoryUsage
        expr: process_resident_memory_bytes{job="levibot-api"} > 1.5e9
        for: 5m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "High memory usage"
          description: "Memory usage is {{ $value | humanize1024 }} (threshold: 1.5GB)"

      # Request Rate Drop
      - alert: RequestRateDrop
        expr: rate(http_requests_total[5m]) < 0.1
        for: 10m
        labels:
          severity: warning
          component: api
        annotations:
          summary: "Request rate anomaly"
          description: "Request rate dropped to {{ $value }}/s"

  - name: levibot_trading
    interval: 1m
    rules:
      # Order Fill Rate
      - alert: LowFillRate
        expr: rate(levi_orders_filled_total[15m]) / rate(levi_orders_submitted_total[15m]) < 0.8
        for: 15m
        labels:
          severity: warning
          component: execution
        annotations:
          summary: "Low order fill rate"
          description: "Fill rate is {{ $value | humanizePercentage }} (threshold: 80%)"

      # Position Concentration
      - alert: HighPositionConcentration
        expr: max(levi_position_pct_portfolio) > 0.3
        for: 5m
        labels:
          severity: warning
          component: risk
        annotations:
          summary: "High position concentration"
          description: "Single position is {{ $value | humanizePercentage }} of portfolio (threshold: 30%)"

      # Drawdown
      - alert: DrawdownExceeded
        expr: levi_portfolio_drawdown_pct > 5
        for: 5m
        labels:
          severity: critical
          component: risk
        annotations:
          summary: "Drawdown threshold exceeded"
          description: "Current drawdown is {{ $value }}% (threshold: 5%)"

  - name: levibot_data
    interval: 2m
    rules:
      # Stale Data
      - alert: StaleMarketData
        expr: time() - levi_last_md_ts > 300
        for: 5m
        labels:
          severity: critical
          component: datafeed
        annotations:
          summary: "Market data feed stale"
          description: "Last market data received {{ $value | humanizeDuration }} ago"

      # WebSocket Disconnects
      - alert: FrequentWSDisconnects
        expr: rate(levi_ws_disconnects_total[10m]) > 0.1
        for: 10m
        labels:
          severity: warning
          component: datafeed
        annotations:
          summary: "Frequent WebSocket disconnects"
          description: "WS disconnect rate: {{ $value }}/s over 10m"

      # Prediction Latency
      - alert: HighPredictionLatency
        expr: histogram_quantile(0.95, sum(rate(levi_prediction_duration_seconds_bucket[5m])) by (le)) > 0.05
        for: 5m
        labels:
          severity: warning
          component: ml
        annotations:
          summary: "ML prediction latency high"
          description: "Prediction p95 latency: {{ $value | humanizeDuration }} (threshold: 50ms)"
